{"ast":null,"code":"import { injectableHook } from '../../core/inject';\nexport const PriceCalculationService = () => {\n  const calculate = (price, weight, creditCard) => {\n    let deliveryFee = weight < 5 || price > 100 ? 0 : weight;\n    let result = price;\n    if (isNaN(price) || isNaN(weight)) return undefined;\n\n    if (price >= 200 && creditCard && weight < 5) {\n      result = result * 0.85;\n    }\n\n    if (price >= 200 && !creditCard) {\n      result = result * 0.9;\n    }\n\n    if (price >= 200 && creditCard && weight >= 5) {\n      result = result * 0.9;\n    }\n\n    if (price < 200 && !creditCard && weight >= 5) {\n      result = price;\n    }\n\n    if (price < 200 && creditCard) {\n      result = result * 0.97;\n    }\n\n    return Math.round((result + deliveryFee) * 10) / 10;\n  };\n\n  return {\n    calculate\n  };\n};\n_c = PriceCalculationService;\nexport const usePriceCalculationService = injectableHook(PriceCalculationService);\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceCalculationService\");","map":{"version":3,"sources":["/home/katriin/testing/src/forms/price-calculations/PriceCalculationsService.ts"],"names":["injectableHook","PriceCalculationService","calculate","price","weight","creditCard","deliveryFee","result","isNaN","undefined","Math","round","usePriceCalculationService"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,mBAA7B;AAMA,OAAO,MAAMC,uBAAuB,GAAG,MAAmC;AACxE,QAAMC,SAAS,GAAG,CAACC,KAAD,EAAgBC,MAAhB,EAAgCC,UAAhC,KAA4E;AAC5F,QAAIC,WAAW,GAAGF,MAAM,GAAG,CAAT,IAAcD,KAAK,GAAG,GAAtB,GAA4B,CAA5B,GAAgCC,MAAlD;AACA,QAAIG,MAAM,GAAGJ,KAAb;AAEA,QAAIK,KAAK,CAACL,KAAD,CAAL,IAAgBK,KAAK,CAACJ,MAAD,CAAzB,EAAmC,OAAOK,SAAP;;AAEnC,QAAIN,KAAK,IAAI,GAAT,IAAgBE,UAAhB,IAA8BD,MAAM,GAAG,CAA3C,EAA8C;AAC5CG,MAAAA,MAAM,GAAGA,MAAM,GAAG,IAAlB;AACD;;AACJ,QAAIJ,KAAK,IAAI,GAAT,IAAe,CAAEE,UAArB,EAAiC;AAC5BE,MAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACD;;AACJ,QAAIJ,KAAK,IAAI,GAAT,IAAgBE,UAAhB,IAA8BD,MAAM,IAAI,CAA5C,EAA+C;AAC1CG,MAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACD;;AACJ,QAAIJ,KAAK,GAAG,GAAR,IAAc,CAAEE,UAAhB,IAA8BD,MAAM,IAAI,CAA5C,EAA+C;AAC1CG,MAAAA,MAAM,GAAGJ,KAAT;AACJ;;AACD,QAAIA,KAAK,GAAG,GAAR,IAAeE,UAAnB,EAA+B;AAC1BE,MAAAA,MAAM,GAAGA,MAAM,GAAG,IAAlB;AACD;;AAGD,WAAOG,IAAI,CAACC,KAAL,CAAW,CAACJ,MAAM,GAAGD,WAAV,IAAyB,EAApC,IAA0C,EAAjD;AACD,GAxBD;;AA0BA,SAAO;AAACJ,IAAAA;AAAD,GAAP;AACD,CA5BM;KAAMD,uB;AA8Bb,OAAO,MAAMW,0BAA0B,GAAGZ,cAAc,CAACC,uBAAD,CAAjD","sourcesContent":["import {injectableHook} from '../../core/inject';\r\n\r\ntype PriceCalculationServiceData = {\r\n  calculate: (price: number, weight: number, creditCard: boolean) => number | undefined;\r\n};\r\n\r\nexport const PriceCalculationService = (): PriceCalculationServiceData => {\r\n  const calculate = (price: number, weight: number, creditCard: boolean): number | undefined => {\r\n    let deliveryFee = weight < 5 || price > 100 ? 0 : weight;\r\n    let result = price;\r\n    \r\n    if (isNaN(price) || isNaN(weight)) return undefined;\r\n    \r\n    if (price >= 200 && creditCard && weight < 5) {\r\n      result = result * 0.85\r\n    }\r\n\tif (price >= 200 &&! creditCard) {\r\n      result = result * 0.9\r\n    }\r\n\tif (price >= 200 && creditCard && weight >= 5) {\r\n      result = result * 0.9\r\n    }\r\n\tif (price < 200 &&! creditCard && weight >= 5) {\r\n      result = price\r\n\t}\r\n\tif (price < 200 && creditCard) {\r\n      result = result * 0.97;\r\n    }\r\n    \r\n\t\r\n    return Math.round((result + deliveryFee) * 10) / 10;\r\n  };\r\n  \r\n  return {calculate};\r\n};\r\n\r\nexport const usePriceCalculationService = injectableHook(PriceCalculationService);\r\n"]},"metadata":{},"sourceType":"module"}